//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MifareWindowsTool.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MifareWindowsTool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Abort.
        /// </summary>
        public static string Abort {
            get {
                return ResourceManager.GetString("Abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à aborted.
        /// </summary>
        public static string Aborted {
            get {
                return ResourceManager.GetString("Aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ACR122U tag reader doesn&apos;t seem to be plugged in!.
        /// </summary>
        public static string ACR122NotPlugged {
            get {
                return ResourceManager.GetString("ACR122NotPlugged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The ACR122 reader is detected but stopped.
        ///Try unplugging and replugging it, then restarting MWT..
        /// </summary>
        public static string ACR122StatusStopped {
            get {
                return ResourceManager.GetString("ACR122StatusStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A dump file.
        /// </summary>
        public static string ADumpFile {
            get {
                return ResourceManager.GetString("ADumpFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à already exists.
        /// </summary>
        public static string AlreadyExists {
            get {
                return ResourceManager.GetString("AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Append keys to existing file.
        /// </summary>
        public static string AppendDumpKeysTo {
            get {
                return ResourceManager.GetString("AppendDumpKeysTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auto scan Tag is running.
        /// </summary>
        public static string AutoScanTagRunning {
            get {
                return ResourceManager.GetString("AutoScanTagRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auto scan tag stopped.
        /// </summary>
        public static string AutoScanTagStopped {
            get {
                return ResourceManager.GetString("AutoScanTagStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The tag reader cannot be found!.
        /// </summary>
        public static string BadgeReaderAcr122NotFound {
            get {
                return ResourceManager.GetString("BadgeReaderAcr122NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This tag identifier is already known by MWT. 
        ///Read anyway ? (If this is a new or recently modified tag on your reader, prefer &apos;Yes&apos;).
        /// </summary>
        public static string BadgeUIDAlreadyknown {
            get {
                return ResourceManager.GetString("BadgeUIDAlreadyknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse.
        /// </summary>
        public static string Browse {
            get {
                return ResourceManager.GetString("Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change UID.
        /// </summary>
        public static string btnChangeUID {
            get {
                return ResourceManager.GetString("btnChangeUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Compare dumps.
        /// </summary>
        public static string btnCompareDumps {
            get {
                return ResourceManager.GetString("btnCompareDumps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Convert.
        /// </summary>
        public static string BtnConvert {
            get {
                return ResourceManager.GetString("BtnConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dump conversion.
        /// </summary>
        public static string btnConvertDump {
            get {
                return ResourceManager.GetString("btnConvertDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete Key File.
        /// </summary>
        public static string BtnDeleteKeyFileContent {
            get {
                return ResourceManager.GetString("BtnDeleteKeyFileContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Edit Key File.
        /// </summary>
        public static string BtnEditKeyFileContent {
            get {
                return ResourceManager.GetString("BtnEditKeyFileContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New Key File.
        /// </summary>
        public static string BtnNewKeyFileContent {
            get {
                return ResourceManager.GetString("BtnNewKeyFileContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Dump A.
        /// </summary>
        public static string btnOpenDumpAContent {
            get {
                return ResourceManager.GetString("btnOpenDumpAContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Dump B.
        /// </summary>
        public static string btnOpenDumpBContent {
            get {
                return ResourceManager.GetString("btnOpenDumpBContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reinstall libUsbk Driver wrapper.
        /// </summary>
        public static string btnReinstallLibUsbK {
            get {
                return ResourceManager.GetString("btnReinstallLibUsbK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rename key file.
        /// </summary>
        public static string BtnRenameKeyFileContent {
            get {
                return ResourceManager.GetString("BtnRenameKeyFileContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select Source Dump.
        /// </summary>
        public static string BtnSelectSourceDumpContent {
            get {
                return ResourceManager.GetString("BtnSelectSourceDumpContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select Target Dump.
        /// </summary>
        public static string BtnSelectTargetDumpContent {
            get {
                return ResourceManager.GetString("BtnSelectTargetDumpContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start decode &amp; Read tag.
        /// </summary>
        public static string btnStartMappingAndReadTagContent {
            get {
                return ResourceManager.GetString("btnStartMappingAndReadTagContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Write Dump.
        /// </summary>
        public static string BtnWriteDumpContent {
            get {
                return ResourceManager.GetString("BtnWriteDumpContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use these Access Conditions for all sectors.
        /// </summary>
        public static string CkACsContent {
            get {
                return ResourceManager.GetString("CkACsContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Advanced: Enable writing to manufacturer block.
        /// </summary>
        public static string CkEnableBlock0WritingContent {
            get {
                return ResourceManager.GetString("CkEnableBlock0WritingContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Periodic Tag AutoScan.
        /// </summary>
        public static string ckEnablePeriodicTagScanContent {
            get {
                return ResourceManager.GetString("ckEnablePeriodicTagScanContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à checks if there is a new tag on the tag reader every 3 seconds.
        /// </summary>
        public static string ckEnablePeriodicTagScanTooltip {
            get {
                return ResourceManager.GetString("ckEnablePeriodicTagScanTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à cloning.
        /// </summary>
        public static string Cloning {
            get {
                return ResourceManager.GetString("Cloning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Compare Dumps.
        /// </summary>
        public static string CompareDumps {
            get {
                return ResourceManager.GetString("CompareDumps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to delete this file?.
        /// </summary>
        public static string ConfirmDeleteFile {
            get {
                return ResourceManager.GetString("ConfirmDeleteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select Yes to convert this dump to Mct Dump, Or No to convert it to Flipper Dump, Or cancel.
        /// </summary>
        public static string ConvertToMctOrFlipperDump {
            get {
                return ResourceManager.GetString("ConvertToMctOrFlipperDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrypt tag.
        /// </summary>
        public static string DecryptTagTitle {
            get {
                return ResourceManager.GetString("DecryptTagTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Different.
        /// </summary>
        public static string Different {
            get {
                return ResourceManager.GetString("Different", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à done with errors.
        /// </summary>
        public static string DoneWithErrors {
            get {
                return ResourceManager.GetString("DoneWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to re-use this dump ?.
        /// </summary>
        public static string DoYouWantToReUseThisDump {
            get {
                return ResourceManager.GetString("DoYouWantToReUseThisDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ACR122U Tag reader driver doesn&apos;t seem to be installed.
        ///Click OK to be redirected on the driver download page.
        ///Install driver last version named &apos;MSI Installer for PC / SC Driver&apos;.
        /// </summary>
        public static string DriverACR122NotInstalled {
            get {
                return ResourceManager.GetString("DriverACR122NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ACR122U seems to be installed but, NOT the LibUsbK driver.
        ///Click OK to install it.
        /// </summary>
        public static string DriverLibUsbKNonInstalled {
            get {
                return ResourceManager.GetString("DriverLibUsbKNonInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dump file already existing.
        /// </summary>
        public static string DumpExisting {
            get {
                return ResourceManager.GetString("DumpExisting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dump Files|*.dump;*.mfd;*.dmp;*.img;*.nfc;*.txt;*.bin|All Files|*.*.
        /// </summary>
        public static string DumpFileFilter {
            get {
                return ResourceManager.GetString("DumpFileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dump.
        /// </summary>
        public static string DumpWindowTitle {
            get {
                return ResourceManager.GetString("DumpWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à EDIT/ADD KEY FILE.
        /// </summary>
        public static string EditAddKeyFile {
            get {
                return ResourceManager.GetString("EditAddKeyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à EDIT/ANALYZE
        ///DUMP FILE.
        /// </summary>
        public static string EditAnalyzeDumpFile {
            get {
                return ResourceManager.GetString("EditAnalyzeDumpFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Edit Dump.
        /// </summary>
        public static string EditDump {
            get {
                return ResourceManager.GetString("EditDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Edit Key File.
        /// </summary>
        public static string EditKeyFileWindowTitle {
            get {
                return ResourceManager.GetString("EditKeyFileWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à English.
        /// </summary>
        public static string English {
            get {
                return ResourceManager.GetString("English", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error Handling.
        /// </summary>
        public static string ErrorHandling {
            get {
                return ResourceManager.GetString("ErrorHandling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Factory Format.
        /// </summary>
        public static string FactoryFormat {
            get {
                return ResourceManager.GetString("FactoryFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Complete the dump with default values if the dump is partial.
        /// </summary>
        public static string FillEmptyWithDefault {
            get {
                return ResourceManager.GetString("FillEmptyWithDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à finished.
        /// </summary>
        public static string Finished {
            get {
                return ResourceManager.GetString("Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Format tag.
        /// </summary>
        public static string FormatTag {
            get {
                return ResourceManager.GetString("FormatTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à French.
        /// </summary>
        public static string French {
            get {
                return ResourceManager.GetString("French", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The LibUsbK driver could not be uninstalled automatically.
        ///Do you want to display the help page to uninstall it manually?.
        /// </summary>
        public static string GetInfoForManualDriverUninstall {
            get {
                return ResourceManager.GetString("GetInfoForManualDriverUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to go on github page? .
        /// </summary>
        public static string GoOnGitHubPage {
            get {
                return ResourceManager.GetString("GoOnGitHubPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to go on github prerelease version page (Yes) or stable version page (No) or Cancel ? .
        /// </summary>
        public static string GoOnGitHubPageBeta {
            get {
                return ResourceManager.GetString("GoOnGitHubPageBeta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HELP/INFO.
        /// </summary>
        public static string HelpAndInfo {
            get {
                return ResourceManager.GetString("HelpAndInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identical.
        /// </summary>
        public static string Identical {
            get {
                return ResourceManager.GetString("Identical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This tag is not know yet.
        ///Mifare Windows tool needs to read and decrypt it once
        ///(even if it&apos;s a blank tag), in order to be able to write something on it.
        ///In the next window, you will be able to read and decode your tag.
        /// </summary>
        public static string InfoMessageTagToReadAndDecode {
            get {
                return ResourceManager.GetString("InfoMessageTagToReadAndDecode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type de Dump Source.
        /// </summary>
        public static string InputDumpType {
            get {
                return ResourceManager.GetString("InputDumpType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid chars in file name.
        /// </summary>
        public static string InvalidCharsInFileName {
            get {
                return ResourceManager.GetString("InvalidCharsInFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid dump file.
        /// </summary>
        public static string InvalidDumpFile {
            get {
                return ResourceManager.GetString("InvalidDumpFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid UID (4 bytes = 8 hex digits) or BLOCK 0 (16 bytes - 32 hex digits).
        /// </summary>
        public static string InvalidUID {
            get {
                return ResourceManager.GetString("InvalidUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key Files|*.keys|All Files|*.*.
        /// </summary>
        public static string KeyFilesFilter {
            get {
                return ResourceManager.GetString("KeyFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Keys.
        /// </summary>
        public static string Keys {
            get {
                return ResourceManager.GetString("Keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default dump path.
        /// </summary>
        public static string LabelDumpsPath {
            get {
                return ResourceManager.GetString("LabelDumpsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default Keys path.
        /// </summary>
        public static string LabelKeysPath {
            get {
                return ResourceManager.GetString("LabelKeysPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select keys to access tag content.
        /// </summary>
        public static string lblChooseKeyFileContent {
            get {
                return ResourceManager.GetString("lblChooseKeyFileContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map Keys.
        /// </summary>
        public static string MapKeyToSectorWindowTitle {
            get {
                return ResourceManager.GetString("MapKeyToSectorWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Following file is missing: {1} in folder {0}
        ///MWT cannot run properly.
        ///Please check if your antivirus has not blocked this file after MWT install..
        /// </summary>
        public static string MissingExeFile {
            get {
                return ResourceManager.GetString("MissingExeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Some mandatory executable files are missing.
        ///MWT may not run properly.
        ///Please check if your antivirus has not blocked some files after MWT install.
        ///Missing file(s) in .
        /// </summary>
        public static string MissingMandatoryExeFiles {
            get {
                return ResourceManager.GetString("MissingMandatoryExeFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Icon semblable à (Icône).
        /// </summary>
        public static System.Drawing.Icon MWT {
            get {
                object obj = ResourceManager.GetObject("MWT", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This file name already exists.
        /// </summary>
        public static string NameAlreadyExisting {
            get {
                return ResourceManager.GetString("NameAlreadyExisting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You need to select one source dump (MWT file format).
        /// </summary>
        public static string NeedSelectDumpKeyFileSource {
            get {
                return ResourceManager.GetString("NeedSelectDumpKeyFileSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You must select a source MWT file and a MWT file corresponding to the target badge.
        /// </summary>
        public static string NeedSelectDumpKeyFileSourceAndTarget {
            get {
                return ResourceManager.GetString("NeedSelectDumpKeyFileSourceAndTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You need to select one target dump.
        /// </summary>
        public static string NeedSelectDumpKeyFileTarget {
            get {
                return ResourceManager.GetString("NeedSelectDumpKeyFileTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You need to select at least one key file.
        /// </summary>
        public static string NeedToSelectOneKeyFile {
            get {
                return ResourceManager.GetString("NeedToSelectOneKeyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A newer prerelease version exists..
        /// </summary>
        public static string NewerBetaVersionExists {
            get {
                return ResourceManager.GetString("NewerBetaVersionExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A newer version exists..
        /// </summary>
        public static string NewerVersionExists {
            get {
                return ResourceManager.GetString("NewerVersionExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New UID.
        /// </summary>
        public static string NewUID {
            get {
                return ResourceManager.GetString("NewUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à new UID Found.
        /// </summary>
        public static string NewUIDFound {
            get {
                return ResourceManager.GetString("NewUIDFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New UID (4 bytes) or full BLOCK 0 (16 bytes).
        /// </summary>
        public static string NewUIDOrBlock0 {
            get {
                return ResourceManager.GetString("NewUIDOrBlock0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no tag.
        /// </summary>
        public static string NoTag {
            get {
                return ResourceManager.GetString("NoTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No Tag detected on reader.
        /// </summary>
        public static string NoTagDetectedOnReader {
            get {
                return ResourceManager.GetString("NoTagDetectedOnReader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Nothing to save.
        /// </summary>
        public static string NothingToSave {
            get {
                return ResourceManager.GetString("NothingToSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Old UID.
        /// </summary>
        public static string OldUID {
            get {
                return ResourceManager.GetString("OldUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Dump.
        /// </summary>
        public static string OpenDump {
            get {
                return ResourceManager.GetString("OpenDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Convert to which type of dump?.
        /// </summary>
        public static string OutputDumpType {
            get {
                return ResourceManager.GetString("OutputDumpType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspend display.
        /// </summary>
        public static string PauseOff {
            get {
                return ResourceManager.GetString("PauseOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resume display.
        /// </summary>
        public static string PauseOn {
            get {
                return ResourceManager.GetString("PauseOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please restart Mifare Windows Tool as Administrator.
        /// </summary>
        public static string PleaseRestartAsAdmin {
            get {
                return ResourceManager.GetString("PleaseRestartAsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Halt on errors.
        /// </summary>
        public static string rbHaltOnErrorContent {
            get {
                return ResourceManager.GetString("rbHaltOnErrorContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tolerate errors.
        /// </summary>
        public static string rbTolerateOnErrorContent {
            get {
                return ResourceManager.GetString("rbTolerateOnErrorContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use Key A.
        /// </summary>
        public static string RbUseKeyAContent {
            get {
                return ResourceManager.GetString("RbUseKeyAContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use Key B.
        /// </summary>
        public static string RbUseKeyBContent {
            get {
                return ResourceManager.GetString("RbUseKeyBContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à READ TAG.
        /// </summary>
        public static string ReadTag {
            get {
                return ResourceManager.GetString("ReadTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Note: before copying a badge, MWT must still know (i.e. decrypt) the badge you are going to copy to, even if it is a blank badge..
        /// </summary>
        public static string ReadTargetMoreInfos {
            get {
                return ResourceManager.GetString("ReadTargetMoreInfos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reset.
        /// </summary>
        public static string Reset {
            get {
                return ResourceManager.GetString("Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save dump.
        /// </summary>
        public static string SaveDump {
            get {
                return ResourceManager.GetString("SaveDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save Dump as.
        /// </summary>
        public static string SaveDumpAs {
            get {
                return ResourceManager.GetString("SaveDumpAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save dump keys as.
        /// </summary>
        public static string SaveDumpKeysAs {
            get {
                return ResourceManager.GetString("SaveDumpKeysAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save Key File.
        /// </summary>
        public static string SaveKeyFile {
            get {
                return ResourceManager.GetString("SaveKeyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à scan finished.
        /// </summary>
        public static string ScanFinished {
            get {
                return ResourceManager.GetString("ScanFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sector.
        /// </summary>
        public static string Sector {
            get {
                return ResourceManager.GetString("Sector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose the MWT dump file corresponding to the content of the badge to be copied (source).
        /// </summary>
        public static string SelectDumpForSourceTag {
            get {
                return ResourceManager.GetString("SelectDumpForSourceTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose the MWT dump file corresponding to the content of the blank badge (target).
        /// </summary>
        public static string SelectDumpForTargetTag {
            get {
                return ResourceManager.GetString("SelectDumpForTargetTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key Files.
        /// </summary>
        public static string SelectKeyFilesWindowTitle {
            get {
                return ResourceManager.GetString("SelectKeyFilesWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tools / Options.
        /// </summary>
        public static string SelectToolWindowTitle {
            get {
                return ResourceManager.GetString("SelectToolWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set new tag UID.
        /// </summary>
        public static string SetUIDWindowTitle {
            get {
                return ResourceManager.GetString("SetUIDWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show as ASCII.
        /// </summary>
        public static string ShowAsASCII {
            get {
                return ResourceManager.GetString("ShowAsASCII", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show as Hex.
        /// </summary>
        public static string ShowAsHex {
            get {
                return ResourceManager.GetString("ShowAsHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à source.
        /// </summary>
        public static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source and Copy are the same.
        /// </summary>
        public static string SourceAndCopyAreTheSame {
            get {
                return ResourceManager.GetString("SourceAndCopyAreTheSame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source dump.
        /// </summary>
        public static string SourceDump {
            get {
                return ResourceManager.GetString("SourceDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start Cloning.
        /// </summary>
        public static string StartCloning {
            get {
                return ResourceManager.GetString("StartCloning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à started.
        /// </summary>
        public static string Started {
            get {
                return ResourceManager.GetString("Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tag.
        /// </summary>
        public static string Tag {
            get {
                return ResourceManager.GetString("Tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thanks to Blogmotion: https://blogmotion.fr/internet/securite/gen1-gen2-gen3-nfc-mifare-1k-18004
        ///
        ///[GENERATION 1] Modifiable UID:
        ///UID can be changed multiple times: yes
        ///All blocks can be written multiple times, including block 0
        ///Compatible with USB drive and libNFC: yes
        ///MCT compatible: yes, except block 0
        ///Backdoor to rewrite regardless of ACs (magic commands): yes (Gen 1a)
        ///Detectable as a copy: yes, because of magic commands
        ///
        ///[GENERATION 2] CUID :
        ///All blocks can be written multiple times, includin [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string TagGensInfo {
            get {
                return ResourceManager.GetString("TagGensInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tag Type.
        /// </summary>
        public static string TagType {
            get {
                return ResourceManager.GetString("TagType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à target.
        /// </summary>
        public static string Target {
            get {
                return ResourceManager.GetString("Target", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Target tag dump file.
        /// </summary>
        public static string TargetDump {
            get {
                return ResourceManager.GetString("TargetDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This file looks like a Flipper Zero dump. Do you want to try to convert it automatically to MWT dump?.
        /// </summary>
        public static string thisisflipperdumpfile {
            get {
                return ResourceManager.GetString("thisisflipperdumpfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This file looks like a MCT (Mifare classic tool) dump. Do you want to try to convert it automatically to MWT dump?.
        /// </summary>
        public static string thisismctdumpfile {
            get {
                return ResourceManager.GetString("thisismctdumpfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à TOOLS / OPTIONS.
        /// </summary>
        public static string Tools {
            get {
                return ResourceManager.GetString("Tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FF078069 is the default value.
        /// </summary>
        public static string ttAcsDefaultValue {
            get {
                return ResourceManager.GetString("ttAcsDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The LibUsbK driver has been detected and should be uninstalled.
        ///Click on &apos;OK&apos; to try to uninstall it.
        ///Then, unplug and replug the drive.
        ///If the LED on the drive is lit, the uninstallation was successful, otherwise try to uninstall the LibusbK driver manually..
        /// </summary>
        public static string UnInstallLibUsbKDriver {
            get {
                return ResourceManager.GetString("UnInstallLibUsbKDriver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (used to generate source tag mapping).
        /// </summary>
        public static string UsedForSourceMapping {
            get {
                return ResourceManager.GetString("UsedForSourceMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (used to generate target tag mapping).
        /// </summary>
        public static string UsedForTargetMapping {
            get {
                return ResourceManager.GetString("UsedForTargetMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use this if your ACR122U has a red LED - with mandatory installed libUSBK driver ,the led should remain OFF (no red light). 
        ///After installing this driver, unplug and replug your ACR122U.
        /// </summary>
        public static string UseInstallDriverIf {
            get {
                return ResourceManager.GetString("UseInstallDriverIf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The source and the target have same UID identifer, are you sure you want to copy this source on that target?
        ///(If not, select another source file to copy ).
        /// </summary>
        public static string WantSourceAndCopyTheSame {
            get {
                return ResourceManager.GetString("WantSourceAndCopyTheSame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Write Dump (Clone).
        /// </summary>
        public static string WriteDumpClone {
            get {
                return ResourceManager.GetString("WriteDumpClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Write Tag.
        /// </summary>
        public static string WriteDumpWindowTitle {
            get {
                return ResourceManager.GetString("WriteDumpWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WRITE TAG.
        /// </summary>
        public static string WriteTag {
            get {
                return ResourceManager.GetString("WriteTag", resourceCulture);
            }
        }
    }
}
